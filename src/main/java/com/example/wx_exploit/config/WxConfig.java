/*
package com.example.wx_exploit.config;


import me.chanjar.weixin.mp.api.WxMpService;
import me.chanjar.weixin.mp.api.impl.WxMpServiceImpl;
import me.chanjar.weixin.mp.config.WxMpConfigStorage;
import me.chanjar.weixin.mp.config.impl.WxMpDefaultConfigImpl;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.stereotype.Component;


*/
/**
 * @ClassName: WxConfig
 * @Description: 微信配置类
 * @Author: yk
 * @Date: 2021/3/31 16:23
 *//*

@Component
public class WxConfig {

    @Value(value = "${wx.mp.appID}")
    private String appID;

    @Value(value ="${wx.mp.appsecret}")
    private String appsecret;

    @Value(value ="${wx.mp.token}")
    private String token;

*/
/*    @Autowired
    private LogHandler logHandler;
    @Autowired
    private MenuHandler menuHandler;
*//*
*/
/*    @Autowired
    private MsgHandler msgHandler;*//*
*/
/*
    @Autowired
    private SubscribeHandler subscribeHandler;
    @Autowired
    private UnsubscribeHandler unsubscribeHandler;
    @Autowired
    private ScanHandler scanHandler;*//*


    @Bean
    public WxMpService wxMpService(){
       WxMpService wxMpService = new WxMpServiceImpl();
       wxMpService.setWxMpConfigStorage(wxMpConfigStorage());
       return wxMpService;
    }

    @Bean
    public WxMpConfigStorage wxMpConfigStorage(){
        WxMpDefaultConfigImpl wxMpConfigStorage = new WxMpDefaultConfigImpl();
        wxMpConfigStorage.setAppId(appID);
        wxMpConfigStorage.setSecret(appsecret);
        wxMpConfigStorage.setToken(token);
        return wxMpConfigStorage;
    }

*/
/*    @Bean
    public WxMpMessageRouter messageRouter(WxMpService wxMpService){
        WxMpMessageRouter newRouter = new WxMpMessageRouter(wxMpService);

        //记录所有时间的日志(异步执行)
        newRouter.rule().handler(logHandler).next();

        //自定义菜单事件
        newRouter.rule()
                .async(false)
                .msgType(EVENT)
                .event(WxConsts.EventType.CLICK)
                .handler(menuHandler)
                .end();

        //关注/扫描带参数二维码事件
        newRouter.rule()
                .async(false)
                .msgType(EVENT)
                .event(WxConsts.EventType.SUBSCRIBE)
                .handler(subscribeHandler)
                .end();

        newRouter.rule()
                .async(false)
                .msgType(EVENT)
                .event(WxConsts.EventType.SCAN)
                .handler(scanHandler)
                .end();

        //取消关注事件
        newRouter.rule()
                .async(false)
                .msgType(EVENT)
                .event(WxConsts.EventType.UNSUBSCRIBE)
                .handler(unsubscribeHandler)
                .end();

    *//*
*/
/*    //默认消息
        newRouter.rule()
                .async(false)
                .handler(msgHandler)
                .end();*//*
*/
/*

        return newRouter;
    }*//*

}
*/
